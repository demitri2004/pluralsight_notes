"Note","Course","Module","Clip","Time in Clip","URL"
"When switch branches, all files that untracked or not commited will travel with you to a branches you are switching to. Once commited would not.","Working with Git Branches","Understanding Git Branch Basics","Renaming and Deleting Branches","7:48","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=fe9cf85e-9a42-476a-ab90-1447e5cc0ca9&clip=2&mode=live&start=468&noteid=6629ffab-36cf-4b9b-9d46-adbef40174f1"
"Fast forward merge is when on main branch we are merging to are no changes. It's like watching a movie on a tv and phone.","Working with Git Branches","Merging Made Easy","Comparing and Merging Branches","1:42","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=91392279-8089-4b39-8443-098f37b5f3fe&clip=0&mode=live&start=102&noteid=3fa059fe-9744-4af0-ac73-ec51f262977e"
"Using branches with your team section is good reference to all commands that are requered.","Working with Git Branches","Using Git Branches with Your Team ","Creating Code That Can Merge","5:55","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=5a91f08b-5cf0-41f2-99a4-569fac3ce091&clip=6&mode=live&start=355&noteid=e5e296ec-40f5-4eba-aa30-fc1e1d51cd9c"
"Never rebase on a public branch, it could cause confusion and lost work for others.","Working with Git Branches","Advanced Merging Methods","Rearranging with Rebase","2:30","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=43f63714-d50e-4a62-97fa-9eda3a605fce&clip=0&mode=live&start=150&noteid=0ce7f35c-f7be-400d-acfc-d90c7437936e"
"Rebase is used to clean up your local git history before pushing to remote. Or for pulling changes from a branch into your branch without performing a merge","Working with Git Branches","Advanced Merging Methods","Rearranging with Rebase","2:58","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=43f63714-d50e-4a62-97fa-9eda3a605fce&clip=0&mode=live&start=178&noteid=4df42fb6-61e9-4f1a-93a0-15635c7e0af0"
"One way to use Rebase is to squash several commits on your local branch to a one commit before merging. So all you commits will appear as one commit after merging to main.","Working with Git Branches","Advanced Merging Methods","Squashing Multiple Commits","0:49","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=43f63714-d50e-4a62-97fa-9eda3a605fce&clip=1&mode=live&start=49&noteid=4056dd60-9125-4bcf-9e97-c6a53770de38"
"Rebase from main in feature branch helps merge changes into your feature branch to create single history line.","Working with Git Branches","Advanced Merging Methods","Rebasing from Main","0:54","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=43f63714-d50e-4a62-97fa-9eda3a605fce&clip=2&mode=live&start=54&noteid=ec28b3d7-9473-47d7-91f8-0779722c5dea"
"Rebase vs merge is that merge keeps history in both branches as is with no chnages, but rebase keeps history of one branch following the history from feature branch.","Working with Git Branches","Advanced Merging Methods","Rebasing from Main","6:54","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=43f63714-d50e-4a62-97fa-9eda3a605fce&clip=2&mode=live&start=414&noteid=b26425d6-7ae0-4b20-a428-88eaea5b0084"
"Cherry-pick is a copy of specific commit to anther branch. Like when bugfix for multiple branches.","Working with Git Branches","Advanced Merging Methods","Using Cherry Pick","1:48","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=43f63714-d50e-4a62-97fa-9eda3a605fce&clip=3&mode=live&start=108&noteid=f163980c-ffe0-4645-b045-53175a08edfe"
"Another example is when you have one main branch and we have two problems to resolve. We create two branches for both problems X and Y. Work in those branches to resolve issues and then cherry-pick commits from X and Y to main with fixes of the problem.","Working with Git Branches","Advanced Merging Methods","Cherry Pick Demos","0:31","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=43f63714-d50e-4a62-97fa-9eda3a605fce&clip=4&mode=live&start=31&noteid=fd2cf3a5-ff67-4ca5-b844-21c27826149e"
"The result is the history in main is easy to read, not having all the history from X and Y branches like it would be in the merge.","Working with Git Branches","Advanced Merging Methods","Cherry Pick Demos","4:51","https://app.pluralsight.com/player?course=git-branches-working&author=craig-golightly&name=43f63714-d50e-4a62-97fa-9eda3a605fce&clip=4&mode=live&start=291&noteid=0af5c4a3-9127-4f65-8610-04cb7e26e902"